diff --git a/CMakeLists.txt b/CMakeLists.txt
index 212aa7dffd4..2453efe8950 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -5,6 +5,10 @@
 # -----------------------------------------------------------------------------
 # Early Initialization
 
+if (WIN32)
+	set(CMAKE_SYSTEM_VERSION 10.0 (latest installed version))
+endif ()
+
 # NOTE: We don't allow in-source builds. This causes no end of troubles because
 # all out-of-source builds will use the CMakeCache.txt file there and even
 # build the libs and objects in it.
diff --git a/build_files/windows/check_libraries.cmd b/build_files/windows/check_libraries.cmd
index e8c04fb3258..4f4b605cc5d 100644
--- a/build_files/windows/check_libraries.cmd
+++ b/build_files/windows/check_libraries.cmd
@@ -35,6 +35,24 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 				echo.
 				exit /b 1
 			)
+
+:RETRYBCOMPAT
+			"%SVN%" checkout https://github.com/nalexandru/BlenderCompat/trunk/bin %BUILD_VS_LIBDIR%/bcompat7
+			if errorlevel 1 (
+				set /p LibRetry= "Error during download, retry? y/n"
+				if /I "!LibRetry!"=="Y" (
+					cd %BUILD_VS_LIBDIR%
+					"%SVN%" cleanup
+					cd %BLENDER_DIR%
+					goto RETRYBCOMPAT
+				)
+				echo.
+				echo Error: Download of external libraries failed.
+				echo This is needed for building, please manually run 'svn cleanup' and 'svn update' in
+				echo %BUILD_VS_LIBDIR% , until this is resolved you CANNOT make a successful blender build
+				echo.
+				exit /b 1
+			)
 		)
 	)
 ) else (
@@ -46,6 +64,8 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 			"%SVN%" update %BUILD_VS_LIBDIR%
 		)
 	)
+
+	"%SVN%" update %BUILD_VS_LIBDIR%/bcompat7
 )
 
 if NOT EXIST %BUILD_VS_LIBDIR% (
@@ -57,4 +77,4 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 		echo This is most likely caused by svn.exe not being available.
 	)
 	exit /b 1
-)
\ No newline at end of file
+)
diff --git a/source/blender/gpu/opengl/gl_backend.cc b/source/blender/gpu/opengl/gl_backend.cc
index f02f3386a4d..43425759989 100644
--- a/source/blender/gpu/opengl/gl_backend.cc
+++ b/source/blender/gpu/opengl/gl_backend.cc
@@ -387,8 +387,23 @@ static void detect_workarounds()
    * polaris platform. Keeping legacy platforms around just in case.
    */
   if (GPU_type_matches(GPU_DEVICE_ATI, GPU_OS_ANY, GPU_DRIVER_OFFICIAL)) {
-    const Vector<std::string> matches = {
-        "RX550/550", "(TM) 520", "(TM) 530", "(TM) 535", "R5", "R7", "R9"};
+    const Vector<std::string> matches = {"RX 460",
+                                         "RX 470",
+                                         "RX 480",
+                                         "RX 490",
+                                         "RX 560",
+                                         "RX 560X",
+                                         "RX 570",
+                                         "RX 580",
+                                         "RX 580X",
+                                         "RX 590",
+                                         "RX550/550",
+                                         "(TM) 520",
+                                         "(TM) 530",
+                                         "(TM) 535",
+                                         "R5",
+                                         "R7",
+                                         "R9"};
 
     if (match_renderer(renderer, matches)) {
       GCaps.use_hq_normals_workaround = true;
diff --git a/source/creator/CMakeLists.txt b/source/creator/CMakeLists.txt
index 66943111380..8c5d6faefd1 100644
--- a/source/creator/CMakeLists.txt
+++ b/source/creator/CMakeLists.txt
@@ -40,6 +40,9 @@ if(WITH_TBB)
   list(INSERT LIB 0 bf_blenkernel)
 endif()
 
+link_directories(${LIBDIR}/bcompat7/lib)
+list(INSERT LIB 0 bcompat7)
+
 if(WIN32)
   list(APPEND INC ../../intern/utfconv)
 endif()
@@ -1400,6 +1403,12 @@ elseif(WIN32)
   if(PLATFORM_BUNDLED_LIBRARIES)
     windows_process_platform_bundled_libraries("${PLATFORM_BUNDLED_LIBRARIES}")
   endif()
+
+  install(
+    FILES ${LIBDIR}/bcompat7/bin/bcompat7.dll
+    DESTINATION "."
+    CONFIGURATIONS Release;RelWithDebInfo;MinSizeRel;Debug
+  )
 elseif(APPLE)
   if(NOT WITH_PYTHON_MODULE)
     # Uppercase name for app bundle.
